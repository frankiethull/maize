---
title: "{maize} package"
format: gfm
knitr:
  opts_chunk:
    fig.path: "man/figures/README-"
---

# maize <img src="man/figures/logo.png" align="right" height="139" alt="" />
    
## what is {maize}?
   
{maize} is an extension library for kernels & support vector machines in tidymodels! The package consists of additional kernel bindings that are not available in the {parsnip} or {recipes} package. Many of the kernels are ported from {kernlab}, additional kernels have been added directly to maize transposed from [Python](https://github.com/gmum/pykernels/blob/master/pykernels/regular.py) and [Julia](https://juliagaussianprocesses.github.io/KernelFunctions.jl/stable/kernels/) packages. 


{parnsip} has three kernels available: linear, radial basis function, & polynomial. {maize} extends to further kernels, other engines, and adds steps for {recipes}: 

### maize engines 
```{r}
#| echo: false

# parsnip bindings --
# kernlab
kernlab_models <- data.frame(
  extension   = "{parsnip}",
  maize   = c("svm_laplace", "svm_tanh", "svm_bessel", "svm_anova_rbf", 
              "svm_spline","svm_cossim", "svm_cauchy", "svm_tanimoto",
              "svm_sorenson", "svm_tstudent", "svm_fourier", "svm_wavelet",
              "svm_string",
              "lssvm_laplace",
              "rvm_laplace", "kqr_laplace"),
  engine  = c(rep("kernlab::ksvm", 13), 
              "kernlab::lssvm",
              "kernlab::rvm",  "kernlab::kqr"),
  mode    = c(rep("regression & classification", 12), 
              "classification",
              "classification",
              rep("regression", 2))
) 

# ebmc 
ebmc_models <- data.frame(
  extension   = "{parsnip}",
  maize   = c("bag_svm_laplace", "rus_boost_svm_laplace", "ada_boost_svm_laplace"),
  engine  = c("ebmc::ub", "ebmc::rus",  "ebmc::adam2"),
  mode    = c(rep("binary-classification", 3))
) 

# mildsvm 
mild_models <- data.frame(
  extension  = "{parsnip}",
  maize  = c("misvm_orova_rbf"),
  engine = c("mildsvm::misvm_orova"),
  mode   = c("classification")
)

maize_models <- kernlab_models |> rbind(ebmc_models) |> rbind(mild_models)

# recipes bindings --
maize_recipes <- data.frame(
  extension = "{recipes}",
  maize  = c("step_kpca_laplace", "step_kpca_tanh", 
             "step_kha_laplace", "step_kha_tanh"),
  engine = c(rep("kernlab::kpca", 2),
             rep("kernlab::kha", 2)),
  mode   = "transformation steps"
)

# probably bindings --
maize_probably <- data.frame(
  extension = "{probably}",
  maize   = c("int_conformal_quantile_svm", "cal_estimate_svm"),
  engine  = c("qrsvm::qrsvm", "kernlab::ksvm"),
  mode    = c("prediction intervals", "calibrator")
)

# gtUtils fun ---
library(BobRossColors)
bars <- BobRossColors::all_palettes |> 
          dplyr::filter(painting_title == "wilderness_trail") |>
          dplyr::pull(divergent)

# ~ maize gr8 tbl wilderness trail ~ --
maize_models |>
  rbind(maize_recipes) |>
  rbind(maize_probably) |>
  gt::gt() |>
  gt::tab_header(title = paste0(emo::ji("corn"),"{maize} bindings"),
                 subtitle = "more to come!") |>
  # theming the tbl
  gtUtils::gt_theme_ncaa() |>
  gtUtils::gt_border_bars_top(bars[1:5]) |>
  gtUtils::gt_border_bars_bottom(bars[6:10]) |>
  # colored/bolded cells:
  gt::tab_style(
    style = list(
      gt::cell_fill(color = bars[4]),
      gt::cell_text(weight = "bold")
      ),
    locations = gt::cells_body(
      columns = extension,
      rows = extension == "{parsnip}"
    )
  ) |>
  gt::tab_style(
    style = list(
      gt::cell_fill(color = bars[6]),
      gt::cell_text(weight = "bold")
      ),
    locations = gt::cells_body(
      columns = extension,
      rows = extension == "{recipes}"
    )
  ) |>
    gt::tab_style(
    style = list(
      gt::cell_fill(color = bars[8]),
      gt::cell_text(weight = "bold")
      ),
    locations = gt::cells_body(
      columns = extension,
      rows = extension == "{probably}"
    )
  ) |>
  gt::as_raw_html()
```



