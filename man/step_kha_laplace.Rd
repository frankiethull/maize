% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/step_kha_laplace.R
\name{step_kha_laplace}
\alias{step_kha_laplace}
\title{Laplacian function kernel PCA signal extraction via Hebbian Algorithm}
\usage{
step_kha_laplace(
  recipe,
  ...,
  role = "predictor",
  trained = FALSE,
  num_comp = 5,
  res = NULL,
  columns = NULL,
  sigma = 0.2,
  learn_rate = 0.005,
  threshold = 1e-04,
  stop_iter = 100,
  prefix = "kha",
  keep_original_cols = FALSE,
  skip = FALSE,
  id = rand_id("kha_laplace")
)
}
\arguments{
\item{res}{An S4 \code{\link[kernlab:kha]{kernlab::kha()}} object is stored
here once this preprocessing step has be trained by
\code{\link[=prep]{prep()}}.}

\item{sigma}{A numeric value for the laplace function parameter.}

\item{learn_rate}{hebbian learning rate}

\item{threshold}{the smallest value of the convergence step}

\item{stop_iter}{maximum number of iterations}
}
\description{
\code{step_kha_laplace()} creates a \emph{specification} of a recipe step that will
convert numeric data into one or more principal components using a laplace
kernel basis expansion.
}
\seealso{
Other multivariate transformation steps: 
\code{\link{step_kpca_laplace}()}
}
\concept{multivariate transformation steps}
